<div
  class="w-full inline-block relative form" 
  x-data={"{
    data: #{@data},
    focusedOptionIndex: null, 
    emptyOptionsMessage: 'No results.',
    name: '#{@name}',
    open: false,
    options: null,
    search: '',
    placeholder: '#{@placeholder}',
    selected: null,
    focusNextOption() {
      if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.option).length - 1
      if(this.focusedOptionIndex + 1 >= Object.key(this.option).length) return
      this.focusedOptionIndex++
      this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
        block: 'center',
      })
    },
    focusPrevOption() {
      if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0
      if(this.focusedOptionIndex <= 0) return
      this.focusedOptionIndex--
      this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
        block: 'center',
      })
    },
    init() {
      this.options = this.data
      if (! (this.value in this.options)) this.value = null
      this.$watch('search', (value) => {
        if (! this.open || ! value) return this.options = this.data
        this.options.filter((opt) => opt.value.toLowerCase().includes(value.value.toLowerCase()))
      })
    },
    closeListbox() {
      this.open = false
      this.focusedOptionIndex = null
    },
    selectOption() {
      if (! this.open) return this.toggleListboxVisiblility()
      this.selected = this.options[this.focusedOptionIndex]
    },
    toggleListboxVisiblility() {
      if (this.open) return this.closeListbox()
      this.focusedOptionIndex = this.options.indexOf(this.value)
      if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
      this.open = true
      console.log('????', this.$refs.listbox.children)
      console.log('????', this.focusedOptionIndex)
    },
  }"}
  x-init="init()"
  @click.away="closeListbox()"
  @click.escape="closeListbox()"
>
  <%= if @show_top_label do %>
    <label><%= @label %></label>
  <% end %>
  <div
    x-ref="button"
    @click="toggleListboxVisiblility()"
    aria-expanded="open"
    :class="{ 'font-semibold': open, 'shadow-none': open }"
    class="focus:outline-none shadow cursor-pointer text-gray-700 hover:text-black flex border border-bgray-400 rounded px-1.5 py-1 pl-3 pr-1 bg-white"
  >
    <div 
    :class="{ 'text-gray-500' : ! (value in options) }"
    class="flex-1 pt-0.5 truncate"
    x-show="! open"
    x-text="value in options ? options[value] : placeholder"
    ></div>
    <%# if @selected !== nil, do: @selected.text, else: @label %>
    <input
      x-ref="search"
      x-show="open"
      x-model="search"
      @keydown.enter.stop.prevent="selectOption()"
      @keydown.arrow-up.stop.prevent="focusPrevOption()"
      @keydown.arrow-down.stop.prevent="focusNextOption()"
      type="search"
      class="form-control w-full h-full focus:outline-none"
    />
    <div>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" :class="{'rotate-180': open}" class="ml-1 inline-block fill-current text-gray-500 w-6 h-6">
        <path fill-rule="evenodd" d="M15.3 10.3a1 1 0 011.4 1.4l-4 4a1 1 0 01-1.4 0l-4-4a1 1 0 011.4-1.4l3.3 3.29 3.3-3.3z"/>
      </svg>
    </div>
  </div>
  <div
    x-show="open"
    class={"bg-white absolute w-44 #{@pos} z-30 mt-1 shadow rounded w-full py-1 text-bgray-600"}
    x-cloak
    x-transition:enter="transition-transform transition-opacity ease-out duration-300"
    x-transition:enter-start="opacity-0 transform -translate-y-2"
    x-transition:enter-end="opacity-100 transform translate-y-0"
    x-transition:leave="transition ease-in duration-300"
    x-transition:leave-end="opacity-0 transform -translate-y-3"
  >
    <ul
      
      x-ref="listbox"
      role="listbox"
      tabindex="-1"
      :aria-activedescendant="name + 'Option' + focusedOptionIndex"
      class="max-h-60 overflow-auto focus:outline-none"
    >
      <template x-for="(opt, index) in options" :key="index">
        <li
          :id="name + 'Option' + index"
          phx-click="option_select"
          phx-value-option="opt.value"
          phx-target={@myself}
          role="option"
          @click="selectOption()"
          :aria-selected="index === focusedOptionIndex"
          @mouseenter="focusedOptionIndex = index"
          @mouseleave="focusedOptionIndex = null"
          class="py-2 px-4 cursor-pointer block hover:bg-blue-100"
          :class="{ 'text-white bg-indigo-600': index === focusedOptionIndex, 'text-gray-700': index !== focusedOptionIndex }"
        >
          <span 
            x-text="opt.text"
            :class="{ 'font-semibold': index === focusedOptionIndex, 'font-normal': index !== focusedOptionIndex }"
            class="block truncate font-normal"
          ></span>
          <%# opt.text %>
        </li>
      </template>
      <%# end %>
      <li
        x-show="! options.length"
        x-text="emptyOptionsMessage"
        class="cursor-default select-none"
      ></li>
    </ul>
  </div>
</div>